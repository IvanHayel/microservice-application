version: '3.8'

services:
  database:
    image: postgres:14.2-alpine
    ports:
      - "5432:5432"
    restart: on-failure
    environment:
      POSTGRES_DB: microservice-app-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configuration-server:
    build:
      context: configuration-server
      dockerfile: Dockerfile
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configuration-server"
  license-service:
    build:
      context: licensing-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      PROFILE: "dev"
    depends_on:
      database:
        condition: service_healthy
      configuration-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "license-service"
networks:
  backend:
    driver: bridge